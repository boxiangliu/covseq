ggplot(log[iteration == last_iteration,], aes(color=as.factor(label), x=sm1)) + geom_histogram()
ggplot(log[iteration == last_iteration,], aes(color=as.factor(label), x=sm1)) + geom_histogram(position='dodge')
ggplot(log[iteration == last_iteration,], aes(fill=as.factor(label), x=sm1)) + geom_histogram(position='dodge')
ggplot(log[iteration == last_iteration,], aes(fill=as.factor(label))) + geom_bar(aes(y = (..count..)/sum(..count..)))
ggplot(log[iteration == last_iteration,], aes(fill=as.factor(label))) + geom_bar(aes(x = (..count..)/sum(..count..)))
ggplot(log[iteration == last_iteration,], aes(x=sm1, fill=as.factor(label))) + geom_bar(aes(x = (..count..)/sum(..count..)))
ggplot(log[iteration == last_iteration,], aes(x=sm1, fill=as.factor(label))) + geom_bar(aes(y = (..count..)/sum(..count..)))
ggplot(log[iteration == last_iteration,], aes(color=as.factor(label), x=sm1)) + geom_histogram(position='dodge')
ggplot(log[iteration == last_iteration,], aes(fill=as.factor(label), x=sm1)) + geom_histogram(position='dodge')
knitr::opts_knit$set(root.dir = normalizePath(".."))
library(data.table)
library(cowplot)
library(stringr)
source("../utils.R")
prediction = fread("../runs/patch/patch_crc10x_sub03/checkpoint/infer_logger.txt")
```{r setup}
knitr::opts_knit$set(root.dir = normalizePath(".."))
library(data.table)
library(cowplot)
library(stringr)
source("../utils.R")
prediction = fread("../runs/patch/patch_crc10x_sub03/checkpoint/infer_logger.txt")
prediction = fread("runs/patch/patch_crc10x_sub03/checkpoint/infer_logger.txt")
prediction
colnames(prediction) = c("split", "tile", "label", "pred", "raw0", "raw1", "sm0", "sm1", "nlsm0", "nlsm1", "loss")
prediction
accuracy = prediction[, accuracy = mean(label == pred), by="split"]
accuracy = prediction[, list(accuracy = mean(label == pred)), by="split"]
accuracy
accuracy = prediction[, list(accuracy = mean(label == pred)), by="split"]
accuracy
table(prediction[split == "train", list(label, pred)])
message("Train")
table(prediction[split == "train", list(label, pred)])
message("Valid")
table(prediction[split == "val", list(label, pred)])
message("Test")
table(prediction[split == "test", list(label, pred)])
library(pROC)
?roc
roc(prediction[split=="train", sm1], prediction[split=="train", label])
roc(label ~ sm1, data = prediction, subset = (split == "train"))
roc(label ~ sm1, data = prediction, subset = (split == "train"), plot=TRUE)
roc(label ~ sm1, data = prediction, subset = (split == "train"))
roc = roc(label ~ sm1, data = prediction, subset = (split == "train"))
plot(roc)
plot(roc, print.auc = TRUE)
message("Train")
roc = roc(label ~ sm1, data = prediction, subset = (split == "train"))
plot(roc, print.auc = TRUE)
message("Train")
roc = roc(label ~ sm1, data = prediction, subset = (split == "val"))
plot(roc, print.auc = TRUE)
message("Train")
roc = roc(label ~ sm1, data = prediction, subset = (split == "test"))
plot(roc, print.auc = TRUE)
plot(roc, print.auc = TRUE, main="Test")
message("Train")
roc = roc(label ~ sm1, data = prediction, subset = (split == "train"))
plot(roc, print.auc = TRUE, main = "Train")
message("Train")
roc = roc(label ~ sm1, data = prediction, subset = (split == "val"))
plot(roc, print.auc = TRUE, main = "Valid")
message("Train")
roc = roc(label ~ sm1, data = prediction, subset = (split == "test"))
plot(roc, print.auc = TRUE, main="Test")
prediction
prediction[, wsi := basename(dirname(tile))]
prediction
wsi_pred = prediction[, list(pred=mean(pred), label=unique(label)), by="wsi"]
wsi_pred
wsi_pred = prediction[, list(pred=mean(pred), label=unique(label)), by=("wsi", "split")]
wsi_pred = prediction[, list(pred=mean(pred), label=unique(label)), by=c("wsi", "split")]
wsi_pred
message("Train")
table(wsi_pred[split == "train", list(label, pred)])
message("Valid")
table(wsi_pred[split == "val", list(label, pred)])
message("Test")
table(wsi_pred[split == "test", list(label, pred)])
wsi_pred = prediction[, list(sm1=mean(sm1), label=unique(label)), by=c("wsi", "split")]
wsi_pred
wsi_pred[, pred := sm1 > 0.5]
message("Train")
table(wsi_pred[split == "train", list(label, pred)])
message("Valid")
table(wsi_pred[split == "val", list(label, pred)])
message("Test")
table(wsi_pred[split == "test", list(label, pred)])
message("Train")
roc = roc(label ~ sm1, data = wsi_pred, subset = (split == "train"))
plot(roc, print.auc = TRUE, main = "Train")
message("Train")
roc = roc(label ~ sm1, data = wsi_pred, subset = (split == "val"))
plot(roc, print.auc = TRUE, main = "Valid")
message("Train")
roc = roc(label ~ sm1, data = wsi_pred, subset = (split == "test"))
plot(roc, print.auc = TRUE, main="Test")
prediction[, sm1]
prediction
hist(prediction[split == "train", sm1])
ggplot(prediction[split == "train",], aes(x=sm1), by="tile")
ggplot(prediction[split == "train",], aes(x=sm1), by="label") + geom_histogram()
ggplot(prediction[split == "train",], aes(x=sm1, fill=label)) + geom_histogram()
ggplot(prediction[split == "train",], aes(x=sm1, fill=as.factor(label))) + geom_histogram()
ggplot(prediction[split == "train",], aes(x=sm1, fill=as.factor(label))) + geom_density()
ggplot(prediction[split == "train",], aes(x=as.factor(label), y=sm1)) + geom_violin()
histogram
ggplot(prediction[split == "train",], aes(x=sm1, fill=as.factor(label)) + geom_histogram()
ggplot(prediction[split == "train",], aes(x=sm1, fill=as.factor(label))) + geom_histogram()
ggplot(prediction[split == "train",], aes(x=sm1, fill=as.factor(label))) + geom_histogram()
ggplot(prediction, aes(x=sm1, fill=as.factor(label))) + geom_histogram() + facet_grid(.~split)
ggplot(prediction, aes(x=sm1, fill=as.factor(label))) + geom_histogram() + facet_grid(split~.)
?facet_grid
ggplot(prediction, aes(x=sm1, fill=as.factor(label))) + geom_histogram() + facet_grid(split~., scale="free_y")
ggplot(prediction, aes(x=sm1, fill=as.factor(label))) + geom_histogram(position="dodge") + facet_grid(split~., scale="free_y")
ggplot(prediction, aes(x=sm1, fill=as.factor(label))) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge") + facet_grid(split~., scale="free_y")
prediction
prediction[split=="val"]
prediction[split=="val" & wsi == "TCGA-AA-A02K-01A-02-BS2.1a087bff-b6ea-4031-b283-c33b77df1f4c"]
ggplot(to_plot, aes(x=sm1, fill=as.factor(label))) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge")
to_plot = prediction[split=="val" & wsi == "TCGA-AA-A02K-01A-02-BS2.1a087bff-b6ea-4031-b283-c33b77df1f4c"]
ggplot(to_plot, aes(x=sm1, fill=as.factor(label))) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge")
prediction
to_plot = prediction[split=="val" & label == 0 & wsi == "TCGA-AA-A02K-01A-02-BS2.1a087bff-b6ea-4031-b283-c33b77df1f4c"]
to_plot
to_plot = prediction[split=="val" & label == 0, wsi]
to_plot = unique(prediction[split=="val" & label == 0, wsi])
to_plot
msi = unique(prediction[split=="val" & label == 1, wsi])
msi
plot_mss = prediction[wsi == mss[0]]
mss = unique(prediction[split=="val" & label == 0, wsi])
msi = unique(prediction[split=="val" & label == 1, wsi])
plot_mss = prediction[wsi == mss[0]]
plot_mss = prediction[wsi == mss[1]]
plot_mss
ggplot(plot_mss, aes(x=sm1, fill=as.factor(label))) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge")
ggplot(plot_mss, aes(x=sm1, fill=as.factor(label))) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge") + ggtitle("MSS")
mss = unique(prediction[split=="val" & label == 0, wsi])
msi = unique(prediction[split=="val" & label == 1, wsi])
plot_mss = prediction[wsi == mss[1]]
ggplot(plot_mss, aes(x=sm1, fill=as.factor(label))) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge") + ggtitle("MSS")
plot_msi = prediction[wsi == msi[1]]
ggplot(plot_mso, aes(x=sm1, fill=as.factor(label))) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge") + ggtitle("MSI")
mss = unique(prediction[split=="val" & label == 0, wsi])
msi = unique(prediction[split=="val" & label == 1, wsi])
plot_mss = prediction[wsi == mss[1]]
ggplot(plot_mss, aes(x=sm1, fill=as.factor(label))) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge") + ggtitle("MSS")
plot_msi = prediction[wsi == msi[1]]
ggplot(plot_msi, aes(x=sm1, fill=as.factor(label))) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge") + ggtitle("MSI")
for (w in msi){
plot_msi = prediction[wsi == w]
ggplot(plot_msi, aes(x=sm1, fill=as.factor(label))) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge")+ggtitle(w)
}
for (w in msi){
plot_msi = prediction[wsi == w]
p=ggplot(plot_msi, aes(x=sm1, fill=as.factor(label))) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge")+ggtitle(w)
print(p)
}
mss = unique(prediction[split=="val" & label == 1, wsi])
for (w in mss[1:30]){
plot_mss = prediction[wsi == w]
ggplot(plot_mss, aes(x=sm1, fill=as.factor(label))) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge") + ggtitle("MSS")
}
for (w in mss[1:30]){
plot_mss = prediction[wsi == w]
p=ggplot(plot_mss, aes(x=sm1, fill=as.factor(label))) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge") + ggtitle("MSS")
print(p)
}
mss = unique(prediction[split=="val" & label == 0, wsi])
for (w in mss[1:30]){
plot_mss = prediction[wsi == w]
p=ggplot(plot_mss, aes(x=sm1, fill=as.factor(label))) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge") + ggtitle("MSS")
print(p)
}
mss = unique(prediction[split=="val" & label == 0, wsi])
for (w in mss[1:30]){
plot_mss = prediction[wsi == w]
p=ggplot(plot_mss, aes(x=sm1) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge") + ggtitle("MSS")
print(p)
mss = unique(prediction[split=="val" & label == 0, wsi])
for (w in mss[1:30]){
plot_mss = prediction[wsi == w]
p=ggplot(plot_mss, aes(x=sm1) + geom_histogram(aes(y=..count../sum(..count..))) + ggtitle("MSS")
print(p)
mss = unique(prediction[split=="val" & label == 0, wsi])
for (w in mss[1:30]){
plot_mss = prediction[wsi == w]
p=ggplot(plot_mss, aes(x=sm1)) + geom_histogram(aes(y=..count../sum(..count..))) + ggtitle("MSS")
print(p)
}
msi = unique(prediction[split=="val" & label == 1, wsi])
for (w in msi){
plot_msi = prediction[wsi == w]
p=ggplot(plot_msi, aes(x=sm1)) + geom_histogram(color="red",aes(y=..count../sum(..count..)),position="dodge")+ggtitle(w)
print(p)
}
msi = unique(prediction[split=="val" & label == 1, wsi])
for (w in msi){
plot_msi = prediction[wsi == w]
p=ggplot(plot_msi, aes(x=sm1)) + geom_histogram(fill="red",aes(y=..count../sum(..count..)),position="dodge")+ggtitle(w)
print(p)
}
mss = unique(prediction[split=="val" & label == 0, wsi])
for (w in mss){
plot_mss = prediction[wsi == w]
p=ggplot(plot_mss, aes(x=sm1)) + geom_histogram(aes(y=..count../sum(..count..))) + ggtitle("MSS")
print(p)
}
mss = unique(prediction[split=="val" & label == 0, wsi])
for (w in mss){
plot_mss = prediction[wsi == w]
p=ggplot(plot_mss, aes(x=sm1)) + geom_histogram(aes(y=..count../sum(..count..))) + ggtitle(w)
print(p)
}
wsi_pred
wsi_pred[split %in% c("val", "test")]
wsi_pred[split %in% c("val", "test"), wsi]
message(wsi_pred[split %in% c("val", "test"), wsi])
print(wsi_pred[split %in% c("val", "test"), wsi])
knitr::opts_knit$set(root.dir = normalizePath(".."))
library(data.table)
library(cowplot)
library(stringr)
library(pROC)
source("../utils.R")
prediction = fread("runs/patch/patch_crc10x_sub03/checkpoint/infer_logger.txt")
colnames(prediction) = c("split", "tile", "label", "pred", "raw0", "raw1", "sm0", "sm1", "nlsm0", "nlsm1", "loss")
prediction[, wsi := basename(dirname(tile))]
accuracy = prediction[, list(accuracy = mean(label == pred)), by="split"]
accuracy
message("Train")
table(prediction[split == "train", list(label, pred)])
message("Valid")
table(prediction[split == "val", list(label, pred)])
message("Test")
table(prediction[split == "test", list(label, pred)])
message("Train")
roc = roc(label ~ sm1, data = prediction, subset = (split == "train"))
plot(roc, print.auc = TRUE, main = "Train")
message("Train")
roc = roc(label ~ sm1, data = prediction, subset = (split == "val"))
plot(roc, print.auc = TRUE, main = "Valid")
message("Train")
roc = roc(label ~ sm1, data = prediction, subset = (split == "test"))
plot(roc, print.auc = TRUE, main="Test")
wsi_pred = prediction[, list(sm1=mean(sm1), label=unique(label)), by=c("wsi", "split")]
wsi_pred[, pred := sm1 > 0.5]
message("Train")
table(wsi_pred[split == "train", list(label, pred)])
message("Valid")
table(wsi_pred[split == "val", list(label, pred)])
message("Test")
table(wsi_pred[split == "test", list(label, pred)])
message("Train")
roc = roc(label ~ sm1, data = wsi_pred, subset = (split == "train"))
plot(roc, print.auc = TRUE, main = "Train")
message("Train")
roc = roc(label ~ sm1, data = wsi_pred, subset = (split == "val"))
plot(roc, print.auc = TRUE, main = "Valid")
message("Train")
roc = roc(label ~ sm1, data = wsi_pred, subset = (split == "test"))
plot(roc, print.auc = TRUE, main="Test")
ggplot(prediction, aes(x=sm1, fill=as.factor(label))) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge") + facet_grid(split~., scale="free_y")
msi = unique(prediction[split=="val" & label == 1, wsi])
for (w in msi){
plot_msi = prediction[wsi == w]
p=ggplot(plot_msi, aes(x=sm1)) + geom_histogram(fill="red",aes(y=..count../sum(..count..)),position="dodge")+ggtitle(w)
print(p)
}
mss = unique(prediction[split=="val" & label == 0, wsi])
for (w in mss){
plot_mss = prediction[wsi == w]
p=ggplot(plot_mss, aes(x=sm1)) + geom_histogram(aes(y=..count../sum(..count..))) + ggtitle(w)
print(p)
}
print(wsi_pred[split %in% c("val", "test"), wsi])
```{r setup}
knitr::opts_knit$set(root.dir = normalizePath(".."))
library(data.table)
library(cowplot)
library(stringr)
library(pROC)
source("../utils.R")
prediction = fread("runs/patch/patch_crc20x_sub01/checkpoint/valid_logger.txt")
colnames(prediction) = c("iteration", "tile", "label", "pred", "raw0", "raw1", "sm0", "sm1", "nlsm0", "nlsm1", "loss")
prediction
prediction[iteration == 2000]
x = prediction[iteration == 2000]
table(x[, list(label, pred)])
last_iteration = max(prediction$iteration)
y = prediction[iteration == last_iteration]
table(y[, list(label, pred)])
x = prediction[iteration == 2000]
table(x[, list(label, pred)])
y = prediction[iteration == last_iteration]
table(y[, list(label, pred)])
z = prediction[iteration == 50000]
table(x[, list(label, pred)])
x = prediction[iteration == 2000]
table(x[, list(label, pred)])
z = prediction[iteration == 50000]
table(x[, list(label, pred)])
y = prediction[iteration == last_iteration]
table(y[, list(label, pred)])
x = prediction[iteration == 2000]
table(x[, list(label, pred)])
z = prediction[iteration == 50000]
table(z[, list(label, pred)])
y = prediction[iteration == last_iteration]
table(y[, list(label, pred)])
confusion = prediction[,list(tn = pred==0 & label==0, tp = pred==1&label==1, fn = pred==0&label==1, fp = pred==1&label==0), by="iteration"]
confusion
batch = 5120
confusion = prediction[,list(tn = sum(pred==0 & label==0)/batch, tp = sum(pred==1&label==1)/batch, fn = (pred==0&label==1)/batch, fp = sum(pred==1&label==0)/sum), by="iteration"]
confusion = prediction[,list(tn = sum(pred==0 & label==0)/batch, tp = sum(pred==1&label==1)/batch, fn = (pred==0&label==1)/batch, fp = sum(pred==1&label==0)/batch), by="iteration"]
confusion
confusion = prediction[,list(tn = sum(pred==0 & label==0)/batch, tp = sum(pred==1&label==1)/batch, fn = (pred==0&label==1)/batch, fp = sum(pred==1&label==0)/batch), by="iteration"]
confusion
prediction[, pred==0, by="iteration"]
prediction[, sum(pred==0), by="iteration"]
prediction[, sum(pred==0&label==0), by="iteration"]
prediction[, sum(pred==0&label==0)/batch, by="iteration"]
prediction[, list(sum(pred==0&label==0)/batch), by="iteration"]
prediction[, list(tn = sum(pred==0&label==0)/batch), by="iteration"]
prediction[, list(tn = sum(pred==0&label==0)/batch,  tp = sum(pred==1&label==1)/batch), by="iteration"]
prediction[, list(tn = sum(pred==0&label==0)/batch,  tp = sum(pred==1&label==1)/batch, fn = (pred==0&label==1)/batch), by="iteration"]
confusion = prediction[,list(tn = sum(pred==0 & label==0)/batch, tp = sum(pred==1&label==1)/batch, fn = sum(pred==0&label==1)/batch, fp = sum(pred==1&label==0)/batch), by="iteration"]
confusion
melt(confusion, id.vars = iteration)
melt(confusion, id.vars = "iteration")
confusion_long = melt(confusion, id.vars = "iteration")
ggplot(confusion_long, aes(x = iteration, y = value, color = variable)) + geom_line()
ggplot(confusion_long[iteration < 50000], aes(x = iteration, y = value, color = variable)) + geom_line()
knitr::opts_knit$set(root.dir = normalizePath(".."))
library(data.table)
library(cowplot)
library(stringr)
library(pROC)
source("../utils.R")
prediction = fread("runs/patch/patch_crc20x_sub01/checkpoint/valid_logger.txt")
colnames(prediction) = c("iteration", "tile", "label", "pred", "raw0", "raw1", "sm0", "sm1", "nlsm0", "nlsm1", "loss")
last_iteration = max(prediction$iteration)
batch = 5120
confusion = prediction[,list(tn = sum(pred==0 & label==0)/batch, tp = sum(pred==1&label==1)/batch, fn = sum(pred==0&label==1)/batch, fp = sum(pred==1&label==0)/batch), by="iteration"]
infer = fread("runs/patch/patch_crc20x_sub01/checkpoint/infer_logger.txt")
colnames(infer) = c("split", "tile", "label", "pred", "raw0", "raw1", "sm0", "sm1", "nlsm0", "nlsm1", "loss")
infer
table(infer[split == "train"][, list(label, pred)])
message("Train")
table(infer[split == "train"][, list(label, pred)])
message("Valid")
table(infer[split == "valid"][, list(label, pred)])
message("Test")
table(infer[split == "test"][, list(label, pred)])
message("Train")
table(infer[split == "train"][, list(label, pred)])
message("Valid")
table(infer[split == "val"][, list(label, pred)])
message("Test")
table(infer[split == "test"][, list(label, pred)])
knitr::opts_knit$set(root.dir = normalizePath(".."))
library(data.table)
library(cowplot)
library(stringr)
library(pROC)
source("../utils.R")
prediction = fread("runs/patch/patch_crc10x_sub04/checkpoint/infer_logger.txt")
colnames(prediction) = c("split", "tile", "label", "pred", "raw0", "raw1", "sm0", "sm1", "nlsm0", "nlsm1", "loss")
prediction[, wsi := basename(dirname(tile))]
accuracy = prediction[, list(accuracy = mean(label == pred)), by="split"]
accuracy
message("Train")
table(prediction[split == "train", list(label, pred)])
message("Valid")
table(prediction[split == "val", list(label, pred)])
message("Test")
table(prediction[split == "test", list(label, pred)])
message("Train")
table(prediction[split == "train", list(label, pred)])
message("Valid")
table(prediction[split == "val", list(label, pred)])
message("Test")
table(prediction[split == "test", list(label, pred)])
message("Train")
roc = roc(label ~ sm1, data = prediction, subset = (split == "train"))
plot(roc, print.auc = TRUE, main = "Train")
message("Train")
roc = roc(label ~ sm1, data = prediction, subset = (split == "val"))
plot(roc, print.auc = TRUE, main = "Valid")
message("Train")
roc = roc(label ~ sm1, data = prediction, subset = (split == "test"))
plot(roc, print.auc = TRUE, main="Test")
wsi_pred = prediction[, list(sm1=mean(sm1), label=unique(label)), by=c("wsi", "split")]
wsi_pred[, pred := sm1 > 0.5]
message("Train")
table(wsi_pred[split == "train", list(label, pred)])
message("Valid")
table(wsi_pred[split == "val", list(label, pred)])
message("Test")
table(wsi_pred[split == "test", list(label, pred)])
message("Train")
roc = roc(label ~ sm1, data = wsi_pred, subset = (split == "train"))
plot(roc, print.auc = TRUE, main = "Train")
message("Train")
roc = roc(label ~ sm1, data = wsi_pred, subset = (split == "val"))
plot(roc, print.auc = TRUE, main = "Valid")
message("Train")
roc = roc(label ~ sm1, data = wsi_pred, subset = (split == "test"))
plot(roc, print.auc = TRUE, main="Test")
ggplot(prediction, aes(x=sm1, fill=as.factor(label))) + geom_histogram(aes(y=..count../sum(..count..)),position="dodge") + facet_grid(split~., scale="free_y")
msi = unique(prediction[split=="val" & label == 1, wsi])
for (w in msi){
plot_msi = prediction[wsi == w]
p=ggplot(plot_msi, aes(x=sm1)) + geom_histogram(fill="red",aes(y=..count../sum(..count..)),position="dodge")+ggtitle(w)
print(p)
}
mss = unique(prediction[split=="val" & label == 0, wsi])
for (w in mss){
plot_mss = prediction[wsi == w]
p=ggplot(plot_mss, aes(x=sm1)) + geom_histogram(aes(y=..count../sum(..count..))) + ggtitle(w)
print(p)
}
library(ggplot2)
library(gggenes)
?geom_gene_label
ggplot(all, aes(xmin=start, xmax=end, y=molecule, fill=overlap, label=gene)) +
geom_gene_arrow() +
geom_gene_label() +
facet_wrap(~molecule, scales="free", ncol=1)+
scale_fill_brewer(palette="Set3")
library(ggplot2)
library(gggenes)
library(data.table)
setwd("~/svail/open_reading_frame/scripts")
pred = fread("../processed_data/glimmer/COVID19.iterated.predict", skip=1)
setnames(pred, c("gene", "start", "end", "frame", "confidence"))
pred$molecule = "pred"
pred$confidence = NULL
pred = pred[pred$frame >= 0]
known = fread("../data/COVID19.nh")
setnames(known, c("gene", "start", "end", "frame", "name"))
known$molecule = "known"
known$name = NULL
pred[, id:=paste(start, end, sep=":")]
known[, id:=paste(start, end, sep=":")]
pred[, overlap:=id %in% known$id]
known[, overlap:=id %in% pred$id]
all = rbind(pred, known)
ggplot(all, aes(xmin=start, xmax=end, y=molecule, fill=overlap, label=gene)) +
geom_gene_arrow() +
geom_gene_label() +
facet_wrap(~molecule, scales="free", ncol=1)+
scale_fill_brewer(palette="Set3")
knitr::opts_chunk$set(echo = TRUE)
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("devtools")
install.packages("htmlwidgets")
install.packages("devtools")
devtools::create("mywidget")               # create package using devtools
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
knitr::opts_chunk$set(echo = TRUE)
install.packages("htmlwidgets")
install.packages("devtools")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
knitr::opts_chunk$set(echo = TRUE)
install.packages("devtools")
devtools::create("mywidget")               # create package using devtools
setwd("mywidget")                          # navigate to package dir
setwd("mywidget")                          # navigate to package dir
htmlwidgets::scaffoldWidget("mywidget")    # create widget scaffolding
getwd()
setwd("..")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(root.dir = '/Users/boxiang/Documents/work/Baidu/projects/viraviz/scripts')
getwd()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(root.dir = '/Users/boxiang/Documents/work/Baidu/projects/viraviz/scripts/')
getwd()
library(fread)
library(data.table)
genome_lengths = fread(in_fn)
in_fn = "../../processed_data/preprocess/filter_fasta/genome_lengths.tsv"
genome_lengths = fread(in_fn)
genome_lengths
genome_lengths
genome_lengths[1,:]
genome_lengths[1,]
genome_lengths = fread(in_fn, sep="\t")
genome_lengths
genome_lengths
genome_lengths = fread(in_fn, sep="\t", header = c("description", "type", "length"))
?fread
genome_lengths = fread(in_fn, sep="\t", col.names = c("description", "type", "length"))
genome_lengths
library(ggplot2)
ggplot(genome_lengths, aes(x=length, color=type)) + geom_density()
p = ggplot(genome_lengths, aes(x=length, color=type)) + geom_density()
print(p)
p
p = ggplot(genome_lengths, aes(x=length, y=length)) + geom_line()
p = ggplot(genome_lengths, aes(x=length, y=length)) + geom_line()
print(p)
